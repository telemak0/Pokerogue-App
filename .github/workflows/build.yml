name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: ["--arm64"]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          args: ${{ matrix.arch }}

      - name: Create ZIP files
        run: |
          cd dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cd win-unpacked
            powershell -Command "Compress-Archive -Path * -DestinationPath ../PokeRogue-Windows.zip"
            cd ..
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            cd linux-unpacked
            zip -r ../PokeRogue-Linux.zip *
            cd ..
          elif [ "${{ matrix.os }}" == "macos-13" ]; then
            cd mac
            zip -r ../PokeRogue-macOS.zip *
            cd ..
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: PokeRogue-${{ matrix.os }}
          path: dist/PokeRogue-*.zip

  create_release:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
	  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          tag_name: draft
          release_name: Draft Release
          draft: true
          prerelease: false

      - name: Upload Release Assets (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/PokeRogue-ubuntu-latest/PokeRogue-Linux.zip
          asset_name: PokeRogue-Linux.zip
          asset_content_type: application/zip
